apiVersion: influxdata.com/v2alpha1
kind: Dashboard
metadata:
  name: system-metrics
spec:
  name: System Metrics
  charts:
    - kind: Single_Stat
      name: CPU Usage %
      queries:
        - query: |
            from(bucket: "ucep")
              |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
              |> filter(fn: (r) => r._measurement == "cpu" and r._field == "usage_user")
              |> mean()
              |> yield(name: "mean")
      suffix: "%"
      decimalPlaces: 2
      width: 2
      height: 3

    - kind: Xy
      name: CPU Usage Over Time
      queries:
        - query: |
            from(bucket: "ucep")
              |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
              |> filter(fn: (r) => r._measurement == "cpu" and r._field == "usage_user")
              |> aggregateWindow(every: v.windowPeriod, fn: mean)
              |> yield(name: "mean")
      xCol: _time
      yCol: _value
      width: 6
      height: 3
      position: overlaid
      geom: line

    - kind: Single_Stat
      name: Memory Used %
      queries:
        - query: |
            from(bucket: "ucep")
              |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
              |> filter(fn: (r) => r._measurement == "mem" and r._field == "used_percent")
              |> last()
      suffix: "%"
      decimalPlaces: 1
      width: 2
      height: 3

    - kind: Xy
      name: Memory Usage Over Time
      queries:
        - query: |
            from(bucket: "ucep")
              |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
              |> filter(fn: (r) => r._measurement == "mem" and r._field == "used_percent")
              |> aggregateWindow(every: v.windowPeriod, fn: mean)
              |> yield(name: "mean")
      xCol: _time
      yCol: _value
      width: 6
      height: 3
      position: overlaid
      geom: line

    - kind: Xy
      name: Disk Used %
      queries:
        - query: |
            from(bucket: "ucep")
              |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
              |> filter(fn: (r) => r._measurement == "disk" and r._field == "used_percent")
              |> aggregateWindow(every: v.windowPeriod, fn: mean)
              |> yield(name: "mean")
      xCol: _time
      yCol: _value
      width: 6
      height: 3
      geom: line

    - kind: Xy
      name: Network Usage (Bytes Sent/Recv)
      queries:
        - query: |
            from(bucket: "ucep")
              |> range(start: v.timeRangeStart, stop: v.timeRangeStop)
              |> filter(fn: (r) =>
                r._measurement == "net" and
                (r._field == "bytes_sent" or r._field == "bytes_recv")
              )
              |> aggregateWindow(every: v.windowPeriod, fn: mean)
              |> yield(name: "mean")
      xCol: _time
      yCol: _value
      width: 6
      height: 3
      geom: line
      position: overlaid
